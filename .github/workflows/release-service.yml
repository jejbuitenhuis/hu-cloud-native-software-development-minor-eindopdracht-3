on:
  push:
    branches:
#      - staging
#      - master
        - pipeline-dev
    paths:
      - '/user-service/**'
      - '/collection-service/**'
      - '/deck-service/**'
      - '/card-service/**'
      - '/common-service/**'
  workflow_dispatch:

jobs:
  back-end-sonarQube-matrix:
    if: github.ref == 'refs/heads/pipeline-dev'
    strategy:
      matrix:
        include:
#          - service: card
#            sonarQubeSecret: SONAR_TOKEN_CARD_SERVICE
          - service: user
            sonarQubeSecret: SONAR_TOKEN_USER_SERVICE
#          - service: deck
#            sonarQubeSecret: SONAR_TOKEN_DECK_SERVICE
#          - service: collection
#            sonarQubeSecret: SONAR_TOKEN_COLLECTION_SERVICE
    uses: ./.github/workflows/back-end-sonarQube-scan.yml@pipeline-dev
    with:
      path: ./${{ matrix.service }}-service
      service-name: ${{ matrix.service }}-service
      coverage-file: coverage-${{ matrix.service }}.xml
    secrets:
      SONAR_QUBE_TOKEN: ${{ secrets[matrix.sonarQubeSecret] }}

  back-end-deployment-matrix:
    if: (github.ref == 'refs/heads/pipeline-dev' && success()) || github.ref == 'refs/heads/master'
    strategy:
      max-parallel: 1
      matrix:
        service: [ 'common', 'user' ]
    uses: ./.github/workflows/release-back-end-pipeline.yml@pipeline-dev
    with:
      path: ./${{ matrix.service }}-service
      service-name: ${{ matrix.service }}-service
      environment: ${{ github.ref == 'refs/heads/master' && 'production' || 'staging' }}

  tag-and-release:
    needs: back-end-deployment-matrix
    runs-on: ubuntu-latest
    steps:
      - name: Tag the build version
        run: |
          git tag "back-end-v${GITHUB_RUN_NUMBER}"
          git push origin "back-end-v${GITHUB_RUN_NUMBER}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: back-end-v${{ github.run_number }}
          release_name: back-end-v${{ github.run_number }}
          draft: false
          prerelease: false

name: Deploy a back-end service

on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string
      environment:
        required: true
        type: string
      service-name:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.path }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build the serverless application
        run: sam build

      - name: Deploy the serverless application
        run: >
          sam deploy 
          --no-confirm-changeset 
          --no-fail-on-empty-changeset 
          --parameter-overrides Stage=${{ inputs.environment }} 
          --stack-name '${{inputs.service-name}}-${{inputs.environment}}' 
          --s3-prefix '${{inputs.service-name}}-${{inputs.environment}}'

      - name: Run performance tests on ${{ inputs.environment }}
        if: ${{ inputs.service-name }} == 'monitoring-service' && ${{ inputs.environment }} == 'dev-env-maikel'
        run: |
          sudo apt-get install maven
          mvn gatling:test -DStage=${{ inputs.environment }} -Dsimulation=RegisterSimulation

      - name: Upload test results
        if: ${{ inputs.service-name }} == 'monitoring-service' && ${{ inputs.environment }} == 'dev-env-maikel'
        uses: actions/upload-artifact@v2
        with:
          name: gatling-results
          path: target/gatling/**

      # TODO change Run performance tests to only run on staging when merging to master
      # - name: Run performance tests
      #   if: ${{ inputs.service-name }} == 'monitoring-service' && ${{ inputs.environment }} == 'staging'
      #   run: mvn gatling:test -DStage=staging -Dsimulation=RegisterSimulation

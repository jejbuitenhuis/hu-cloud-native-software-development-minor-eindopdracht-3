AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Deck-service

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Handler: app.lambda_handler
    Runtime: python3.9
    Architectures:
      - x86_64
    Tracing: Active
    Environment:
      Variables:
        EVENT_BUS_ARN:
          Fn::ImportValue:
            !Sub "common-service-${Stage}-MTGEventBus"
        DYNAMO_DB_DECK_TABLE_NAME: !Ref MTGDeckDynamoDBTable

Parameters:
  Stage:
    Type: String
    Default: development

Resources:
  MTGDeckApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${Stage}-mtg-deck-api"
      StageName: !Ref Stage
      OpenApiVersion: '2.0'
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./swagger-spec.json
      MethodSettings:
        - ResourcePath: '/*'
          HttpMethod: '*'
          LoggingLevel: INFO
          MetricsEnabled: true
      AccessLogSetting:
        DestinationArn: !GetAtt AccessLogGroup.Arn
        Format: '{"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","routeKey":"$context.routeKey","status":$context.status,"responseLatency":$context.responseLatency}'

  AccessLogGroup:
    Type: AWS::Logs::LogGroup

  MTGDeckDynamoDBTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub "${Stage}-mtg-deck-db"
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  PingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/Ping/
      Events:
        HelloWorld:
          Type: Api
          Properties:
            RestApiId: !Ref "MTGDeckApi"
            Path: /ping
            Method: get

  CreateDeckFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/CreateDeck/
      Events:
        HelloWorld:
          Type: Api
          Properties:
            RestApiId: !Ref "MTGDeckApi"
            Path: /api/decks/
            Method: POST
      Policies:
        - AmazonDynamoDBFullAccess

  GetDecksFromUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/GetDecksFromUser/
      Events:
        HelloWorld:
          Type: Api
          Properties:
            RestApiId: !Ref "MTGDeckApi"
            Path: /api/decks/
            Method: GET
      Policies:
        - AmazonDynamoDBReadOnlyAccess

Outputs:
  MTGDeckApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${MTGDeckApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"
  MTGDeckApi:
    Description: "Api gateway"
    Value: !Ref MTGDeckApi
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-api'
